install.packages("installr")
library(installr)
update()
updateR()
quit()
# put discrete data into the BIOS-SCOPE master file. These data will arrive in small pieces, so
# need a script that will iteratively add data.
# original code from Shuting Liu - adapt to make its own script
# Krista Longnecker, 8 January 2024
library(dplyr)
getwd()
setwd("~/GitHub/data_pipeline/R_code")
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
setwd(dPath)
dir
ls)_
ls()
dir()
#read in the master file - which is currently an Excel file
fName <- "BATS_BS_COMBINED_MASTER_2024.01.04_copy.xlsx"
sheetName <- "BATS_BS bottle file"
#definitely want suppressWarnings here to prevent one error message for each row
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),sheet = sheetName))
#there are multiple options for reading/writing Excel files, and because of the formatting, I need two choices
library(readxl) #use this to read in the master file
#definitely want suppressWarnings here to prevent one error message for each row
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),sheet = sheetName))
discrete_updated <-as.data.frame(discrete)
#before moving on, tidy up and remove this package
detach("package:readxl",unload=TRUE)
### now read in the file with openxlsx2 because that will be the easiest way to pull in the existing style
#but it is much harder to manipulate the files with openxlsx2
library(openxlsx2)
fs <- wb_load(file = paste0(dPath,fName))
#I can get the number of rows from discrete to set dims (seems like that would be an obvious function in openxlsx2 but I cannot find it)
setDim <- paste0("A1:EG",nrow(discrete))
stylesE <- wb_get_cell_style(wb = fs,sheet=sheetName,dims = setDim)
#will put the updated version of discrete here:
fs$add_worksheet("updatedData")
dir()
#read in the new data from Lomas, file is available here
nPath <- "C:/Users/klongnecker/Documents/Dropbox/__wasDROPBOX_nowCurrent/ZZ_BIOSSCOPE_dataProcessingCode/"
nDatafile <- "10334_20346fcm_phys_final_annotatedKL.2024.01.16.xlsx"
newFCMdata <- suppressWarnings(read_excel(paste0(dPath,fName)))
#there are multiple options for reading/writing Excel files, and because of the formatting, I need two choices
library(readxl) #use this to read in the master file
newFCMdata <- suppressWarnings(read_excel(paste0(dPath,fName)))
newFCMdata <-as.data.frame(newFCMdata)
View(newFCMdata)
View(newFCMdata)
newFCMdata <- suppressWarnings(read_excel(paste0(dPath,fName),sheet = "data"))
#read in the new data from Lomas, file is available here
nPath <- "C:/Users/klongnecker/Documents/Dropbox/__wasDROPBOX_nowCurrent/ZZ_BIOSSCOPE_dataProcessingCode/"
nDatafile <- "10334_20346fcm_phys_final_annotatedKL.2024.01.16.xlsx"
newFCMdata <- suppressWarnings(read_excel(paste0(dPath,fName),sheet = "data"))
#read in the new data from Lomas, file is available here
nPath <- "C:/Users/klongnecker/Documents/Dropbox/__wasDROPBOX_nowCurrent/ZZ_BIOSSCOPE_dataProcessingCode/"
nDatafile <- "10334_20346fcm_phys_final_annotatedKL.2024.01.16.xlsx"
newFCMdata <- suppressWarnings(read_excel(paste0(dPath,fName),sheet = "Sheet1"))
newFCMdata <- suppressWarnings(read_excel(paste0(nPath,nDatafile),sheet = "Sheet1"))
newFCMdata <-as.data.frame(newFCMdata)
View(newFCMdata)
#before moving on, tidy up and remove this package
detach("package:readxl",unload=TRUE)
head(newFCMdata)
newFCMdata$ID[1]
##here - find the rows that match between newFCMdata and discrete
#maybe make life easy -
idx <- 1
one <- newFCMdata$ID[idx]
which(one,discrete$ID)
match(one,discrete$ID)
discrete$ID[5614,]
discrete[5614,]
discrete[5614,1]
one
d <- colnames(discrete_updated)
d
tempColumns <- cbind("Pro","Syn","picoeuk","nanoeuk")
existingColumns <- cbind("Pro(cells/ml)","Syn(cells/ml)","Piceu(cells/ml)","Naneu(cells/ml)")
tempColumns
class(tempColumns)
class(d)
d
class(d)
class(d)
class(tempColumns)
tempColumns <- c("Pro","Syn","picoeuk","nanoeuk")
tempColumns
class(tempColumns)
existingColumns <- c("Pro(cells/ml)","Syn(cells/ml)","Piceu(cells/ml)","Naneu(cells/ml)")
ti <- which(colnames(newFCMdata) %in% colnames(discrete_data))
ti <- which(colnames(newFCMdata) %in% colnames(discrete))
ti
ti <- which(colnames(discrete) %in% existingColumns)
ti
View(discrete)
colnames(discrete)[67]
colIdxDiscrete <- which(colnames(discrete) %in% existingColumns)
rm(ti)
m <- match(one,discrete$ID)
m
colIdxDiscrete
discrete[m,colIdxDiscrete]
discrete[m,colIdxDiscrete] <- -999
discrete[m,colIdxDiscrete]
colIdxLomas <- which(colnames(newFCMdata) %in% tempColumns)
colIdxLomas
newFCMdata[1,colIdxLomas]
#now, put in the right variables
discrete[m,colIdxDiscrete] <- newFCMdata[idx,colIdxLomas]
discrete[m,colIdxDiscrete]
nrow(newFCMdata)
for (idx in 1:nrow(newFCMdata)) {
one <- newFCMdata$ID[idx]
#figure out which row matches in the discrete file
m <- match(one,discrete$ID)
#first, set the existing data to -999 (being cautious)
discrete[m,colIdxDiscrete] <- -999
#now, put in the right variables
discrete[m,colIdxDiscrete] <- newFCMdata[idx,colIdxLomas]
}
source("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
getwd()
t <- 2450
discreted_updated[t,]
discrete_updated[t,]
discrete[t,"ID"]
discrete_updated[t,"ID"]
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
#read in the master file - which is currently an Excel file
fName <- "BATS_BS_COMBINED_MASTER_2024.01.04_copy.xlsx"
sheetName <- "BATS_BS bottle file"
#definitely want suppressWarnings here to prevent one error message for each row
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),sheet = sheetName))
#there are multiple options for reading/writing Excel files, and because of the formatting, I need two choices
library(readxl) #use this to read in the master file
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
#read in the master file - which is currently an Excel file
fName <- "BATS_BS_COMBINED_MASTER_2024.01.04_copy.xlsx"
sheetName <- "BATS_BS bottle file"
#definitely want suppressWarnings here to prevent one error message for each row
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),sheet = sheetName))
discrete_updated <-as.data.frame(discrete)
discrete[t,"ID"]
help("readxl")
#definitely want suppressWarnings here to prevent one error message for each row
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf))
discrete[t,"ID"]
setwd("~/GitHub/data_pipeline/R_code")
source("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
debugSource("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
one
debugSource("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
m <- match(one,discrete_updated$ID)
idx
m
one
head(discrete_updated$ID)
View(discreted_updated$ID)
View(discrete_updated$ID)
match(one,discrete_updated$New_ID)
match(one,discrete_updated$ID)
source("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
discrete[1,]
discrete[1,"ID" "New_ID"]
discrete[1,c("ID", "New_ID")]
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf,
col_types = c("text","guess")))
#there are multiple options for reading/writing Excel files, and because of the formatting, I need two choices
library(readxl) #use this to read in the master file
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
#read in the master file - which is currently an Excel file
fName <- "BATS_BS_COMBINED_MASTER_2024.01.04_copy.xlsx"
sheetName <- "BATS_BS bottle file"
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf,
col_types = c("text","guess")))
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf,
col_types = c("list")))
discrete[1,c("ID", "New_ID")]
discrete[1,c("ID")]
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf,
col_types = c("guess")))
discrete[1,c("ID", "New_ID")]
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf,
col_types = c("text")))
discrete[1,c("ID", "New_ID")]
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
#read in the master file - which is currently an Excel file
fName <- "BATS_BS_COMBINED_MASTER_2024.01.04_copy.xlsx"
sheetName <- "BATS_BS bottle file"
#definitely want suppressWarnings here to prevent one error message for each row
#have to set guess_max to Inf so that it does not try and guess based on
#first rows (and then fail when it gets to the BIOS-SCOPE cruises)
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf))
discrete[1,c("ID", "New_ID")]
getwd()
source("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
source("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
getwd()
dPath
source("~/GitHub/data_pipeline/R_code/Correct_LomasFCMdata.R")
quit()
quit()
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working.R")
source("~/GitHub/data_pipeline/R_code/working2.R")
source("~/GitHub/data_pipeline/R_code/working2.R")
source("~/GitHub/data_pipeline/R_code/working2.R")
source("~/GitHub/data_pipeline/R_code/working2.R")
quit()
library(openxlsx)
help(copyStyle)
help("openxlsx")
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
#read in the master file - which is currently an Excel file
fName <- "fullCopy.xlsx"
wb <- loadWorkbook(file = pasteo(dPath,fName))
wb <- loadWorkbook(file = paste0(dPath,fName))
getStyles(wb)
#definitely want suppressWarnings here to prevent one error message for each row
#have to set guess_max to Inf so that it does not try and guess based on
#first rows (and then fail when it gets to the BIOS-SCOPE cruises)
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf))
#there are multiple options for reading/writing Excel files, and because of the formatting, I need two choices
library(readxl) #use this to read in the master file
#definitely want suppressWarnings here to prevent one error message for each row
#have to set guess_max to Inf so that it does not try and guess based on
#first rows (and then fail when it gets to the BIOS-SCOPE cruises)
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf))
sheetName <- "BATS_BS bottle file"
#definitely want suppressWarnings here to prevent one error message for each row
#have to set guess_max to Inf so that it does not try and guess based on
#first rows (and then fail when it gets to the BIOS-SCOPE cruises)
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf))
discrete_updated <-as.data.frame(discrete)
addWorksheet(wb,"updated")
writeData(wb,"updated",discrete_updated)
saveWorkbook(wb,"testing.xlsx")
cloneWorksheet(wb,"new",clonedSheet = sheetName)
saveWorkbook(wb,"testing2.xlsx")
rm(list = ls.str())
#there are multiple options for reading/writing Excel files, and because of the formatting, I need two choices
library(readxl) #use this to read in the master file
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
#read in the master file - which is currently an Excel file
fName <- "BATS_BS_COMBINED_MASTER_2024.01.04.xlsx"
sheetName <- "BATS_BS bottle file"
#definitely want suppressWarnings here to prevent one error message for each row
#have to set guess_max to Inf so that it does not try and guess based on
#first rows (and then fail when it gets to the BIOS-SCOPE cruises)
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf))
discrete_updated <-as.data.frame(discrete)
#before moving on, tidy up and remove this package
detach("package:readxl",unload=TRUE)
### now read in the file with openxlsx2 because that will be the easiest way to pull in the existing style
#but it is much harder to manipulate the files with openxlsx2
library(openxlsx2)
fs <- wb_load(file = paste0(dPath,fName))
wb_save(fs,file = paste0(dPath,"temp4.xlsx"),overwrite = TRUE)
#read in the master file - which is currently an Excel file
fName <- "partialCopy.xlsx"
sheetName <- "BATS_BS bottle file"
#before moving on, tidy up and remove this package
detach("package:readxl",unload=TRUE)
### now read in the file with openxlsx2 because that will be the easiest way to pull in the existing style
#but it is much harder to manipulate the files with openxlsx2
library(openxlsx2)
fs <- wb_load(file = paste0(dPath,fName))
wb_save(fs,file = paste0(dPath,"temp5.xlsx"),overwrite = TRUE)
fs <- wb_load(file = paste0(dPath,fName))
wb_save(fs,file = paste0(dPath,"temp6.xlsx"),overwrite = TRUE)
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
# use this script to correct the error in the Lomas/FCM data, mostly based on
#Join_discreteData.R
# note this will make a temporary file with a new sheet called 'UpdatedData' - this
# was done to encourage people to double-check that everything ended up in the right place
# Krista Longnecker, 20 January 2024
library(dplyr)
#there are multiple options for reading/writing Excel files, and because of the formatting, I need two choices
library(readxl) #use this to read in the master file
##first, read in the existing discrete file (file is *not* on GitHub, update to your own path)
dPath <- "C:/Users/klongnecker/Documents/Dropbox/Current projects/Kuj_BIOSSCOPE/RawData/DataFiles_CTDandDiscreteSamples/"
#read in the master file - which is currently an Excel file
fName <- "BATS_BS_COMBINED_MASTER_2024.01.04.xlsx"
sheetName <- "BATS_BS bottle file"
#definitely want suppressWarnings here to prevent one error message for each row
#have to set guess_max to Inf so that it does not try and guess based on
#first rows (and then fail when it gets to the BIOS-SCOPE cruises)
discrete <- suppressWarnings(read_excel(paste0(dPath,fName),
sheet = sheetName,
guess_max=Inf))
discrete_updated <-as.data.frame(discrete)
add#read in the new data from Lomas, file is available here
nPath <- "C:/Users/klongnecker/Documents/Dropbox/__wasDROPBOX_nowCurrent/ZZ_BIOSSCOPE_dataProcessingCode/"
nDatafile <- "10334_20346fcm_phys_final_annotatedKL.2024.01.16.xlsx"
newFCMdata <- suppressWarnings(read_excel(paste0(nPath,nDatafile),
sheet = "Sheet1",
guess_max=Inf))
newFCMdata <-as.data.frame(newFCMdata)
#need to explicitely link colnames as people are using various options, which
#or may not match what is in the bottle file
tempColumns <- c("Pro","Syn","picoeuk","nanoeuk")
existingColumns <- c("Pro(cells/ml)","Syn(cells/ml)","Piceu(cells/ml)","Naneu(cells/ml)")
colIdxDiscrete <- which(colnames(discrete_updated) %in% existingColumns)
colIdxLomas <- which(colnames(newFCMdata) %in% tempColumns)
#before moving on, tidy up and remove this package
detach("package:readxl",unload=TRUE)
### now read in the file with openxlsx2 because that will be the easiest way to pull in the existing style
#but it is much harder to manipulate the files with openxlsx2
library(openxlsx2)
# If I assemble my own workbook, I can save the file that results from Excel
# But will only be one sheet with new data...can paste that into new bottle file
wb <- wb_workbook()
#will put the updated version of discrete here:
wb$add_worksheet("updatedData")
for (idx in 1:nrow(newFCMdata)) {
one <- newFCMdata$ID[idx]
#figure out which row matches in the discrete file
m <- match(one,discrete_updated$New_ID)
#first, set the existing data to -999 (being cautious)
discrete_updated[m,colIdxDiscrete] <- -999
#now, put in the right variables
discrete_updated[m,colIdxDiscrete] <- newFCMdata[idx,colIdxLomas]
}
#now that I have updated the discrete data, stick it back into the workbook
wb$add_data("updatedData",discrete_updated)
#this next line will open up the file in Excel. Sadly you will still have to copy
#and paste into a new sheet, but at least you can copy the whole sheet
xl_open(wb)
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
# If I assemble my own workbook, I can save the file that results from Excel
# But will only be one sheet with new data...can paste that into new bottle file
wb <- wb_workbook()
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
source('~/Dropbox/GitHub/data_pipeline/R_code/Correct_LomasFCMdata_v2.R')
source('~/Dropbox/GitHub/data_pipeline/R_code/Join_discreteData_v2.R')
source('~/Dropbox/GitHub/data_pipeline/R_code/Join_discreteData_v2.R')
quit
quit()
quit()
quit()
quit()
